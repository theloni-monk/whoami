{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["THeader","props","top","width","p","zIndex","id","backgroundColor","Item","Link","href","fontSize","icon","MarkGithubIcon","size","mr","headWidth","full","ml","aria-label","color","sx","Intro","minHeight","position","padding","mt","headerOffset","mb","fontStyle","Bio","bg","float","textAlign","borderRadius","gridTemplateColumns","gridGap","style","src","process","alt","textIndent","Footer","height","pb","pt","pl","App","useState","headerWidth","setHeaderwidth","headerHeight","setHeaderHeight","useLayoutEffect","window","innerWidth","console","log","document","getElementById","clientHeight","className","backgroundImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yPAaMA,EAAU,SAACC,GACf,OAAQ,cAAC,IAAD,CAAOC,IAAK,EAAGC,MAAM,OAAOC,EAAG,EAAGC,OAAQ,GAAIC,GAAG,OAAjD,SACN,eAAC,IAAD,CAAQC,gBAAgB,UAAUH,EAAG,EAArC,UACE,cAAC,IAAOI,KAAR,UACE,eAAC,IAAOC,KAAR,CACEC,KAAK,yCACLC,SAAU,EAFZ,UAIE,cAAC,IAAD,CAAeC,KAAMC,IAAgBC,KAAM,GAAIC,GAAI,IAClDd,EAAMe,UAAY,IAAM,wDAAoC,QAGjE,eAAC,IAAOR,KAAR,CAAaS,MAAI,EAAjB,UACG,IACD,cAAC,IAAD,CAASC,GAAI,EAAGP,SAAU,EAA1B,kCAIF,cAAC,IAAOH,KAAR,CAAaO,GAAI,EAAjB,SAEE,eAAC,IAAD,CAAcI,aAAW,OAAzB,UACE,cAAC,IAAaV,KAAd,CACEC,KAAK,QACLU,MAAM,QACNC,GAAI,CAAE,SAAU,CAAED,MAAO,SAH3B,kBAOA,cAAC,IAAaX,KAAd,CACEC,KAAK,iBACLU,MAAM,QACNC,GAAI,CAAE,SAAU,CAAED,MAAO,SAH3B,mBAOA,cAAC,IAAaX,KAAd,CACEC,KAAK,WACLU,MAAM,QACNC,GAAI,CAAE,SAAU,CAAED,MAAO,SAH3B,mCAaJE,EAAQ,SAACrB,GACb,OACE,cAAC,IAAD,CACEoB,GAAI,CAAEE,UAAW,QAASC,SAAU,WAAYnB,OAAQ,GACxDoB,QAAS,MACTC,GAAIzB,EAAM0B,aAAe,KACzBC,GAAI,EAJN,SAME,cAAC,IAAD,CAASC,UAAU,SAAST,MAAM,QAAQT,SAAS,YAAYU,GAAI,CAAEG,SAAU,WAAYnB,OAAQ,GAAnG,oCAOAyB,EAAM,WACV,OACE,cAAC,IAAD,CACEV,MAAM,QACNhB,EAAE,KACF2B,GAAG,UAEHV,GAAI,CAAEW,MAAO,OAAQC,UAAW,OAAQT,SAAU,WAAYnB,OAAQ,EAAG6B,aAAc,OALzF,SAOE,eAAC,IAAD,CAAMC,oBAAoB,kBAAkBC,QAAS,EAArD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASrB,GAAG,OAAOa,GAAG,KAAKP,GAAI,CAAEW,MAAO,OAAQ7B,MAAO,OAAvD,uBAGA,qBACEkC,MAAO,CAAEH,aAAc,QACvB/B,MAAM,MACNmC,IAAMC,2BACNC,IAAI,UAGR,cAAC,IAAD,CAAKzB,GAAG,KAAR,SACE,mBAAGsB,MAAO,CAAEI,WAAY,MAAO9B,SAAU,UAAzC,gSA6CJ+B,EAAS,WACb,OAAQ,eAAC,IAAD,CAAKX,GAAG,UAAU5B,MAAM,OAAOwC,OAAO,OAAOvB,MAAM,OAAnD,UACN,cAAC,IAAD,CAAShB,EAAE,KAAKwC,GAAG,IAAIX,UAAU,OAAOtB,SAAS,SAAjD,mDACA,eAAC,IAAD,CAASP,EAAE,KAAKyC,GAAG,KAAKD,GAAG,KAAKX,UAAU,OAAOtB,SAAS,SAA1D,4DAAkH,mBAAG0B,MAAO,CAAEjB,MAAO,QAAUV,KAAK,yCAAlC,qBAElH,cAAC,IAAD,CAAKP,MAAM,MAAM2C,GAAG,KAAKF,GAAG,KAA5B,SACE,6BAgDSG,EAzCH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACTC,EADS,KACIC,EADJ,OAEwBF,mBAAS,IAFjC,mBAETG,EAFS,KAEKC,EAFL,KAUhB,OALAC,2BAAgB,WAAO,IAAD,EACpBH,EAAeI,OAAOC,YACtBC,QAAQC,IAAIR,GACZG,EAAe,UAACM,SAASC,eAAe,eAAzB,aAAC,EAAiCC,gBAChD,CAACX,EAAaE,IAEf,sBAAKU,UAAU,qCAAf,UAEE,0BAASvD,GAAG,SAAZ,UACE,cAAC,EAAD,CAASU,UAAWiC,IACpB,cAAC,IAAD,CAAK5B,GAAI,CAAEyC,gBAAiB,+BAAqDvC,UAAW,IAAKpB,MAAO,OAAQwC,OAAQ,OAAQnB,SAAU,QAASnB,QAAS,QAE9J,yBAASC,GAAG,QAAZ,SACE,cAAC,EAAD,CAAOqB,aAAcwB,MAEvB,yBAAS7C,GAAG,MAAZ,SACE,cAAC,EAAD,MAEF,0BAASA,GAAG,WAAZ,UACE,cAAC,IAAD,CAAKoB,GAAG,KAAKtB,EAAE,KAAf,SACE,cAAC,IAAD,CAAS6B,UAAU,OAAOb,MAAM,QAAhC,2CAIF,cAAC,IAAD,CAAMe,oBAAoB,kBAAkBC,QAAS,OAIvD,yBAAS9B,GAAG,iBACZ,yBAASA,GAAG,SAAZ,SACE,cAAC,EAAD,UCnLOyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASC,eAAe,SAM1BI,M","file":"static/js/main.73e54498.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  Grid,\n  Box,\n  Fixed,\n  Header,\n  Heading,\n  UnderlineNav,\n  StyledOcticon,\n} from \"@primer/components\";\nimport { MarkGithubIcon } from \"@primer/octicons-react\";\n\nconst THeader = (props: { headWidth: number }) => {\n  return (<Fixed top={0} width=\"100%\" p={0} zIndex={10} id=\"head\">\n    <Header backgroundColor=\"#101818\" p={3}>\n      <Header.Item>\n        <Header.Link\n          href=\"https://github.com/theloni-monk/whoami\"\n          fontSize={2}\n        >\n          <StyledOcticon icon={MarkGithubIcon} size={24} mr={2} />\n          {props.headWidth > 500 ? <span>GitHub for this page</span> : \"\"}\n        </Header.Link>\n      </Header.Item>\n      <Header.Item full>\n        {\" \"}\n        <Heading ml={2} fontSize={2}>\n          Thelonious Cooper\n      </Heading>\n      </Header.Item>\n      <Header.Item mr={0}>\n        {/**todo make responsive with hamburger menue for mobile */}\n        <UnderlineNav aria-label=\"Main\">\n          <UnderlineNav.Link\n            href=\"#home\"\n            color=\"white\"\n            sx={{ \":hover\": { color: \"grey\" } }}\n          >\n            Home\n        </UnderlineNav.Link>\n          <UnderlineNav.Link\n            href=\"#documentation\"\n            color=\"white\"\n            sx={{ \":hover\": { color: \"grey\" } }}\n          >\n            Links\n        </UnderlineNav.Link>\n          <UnderlineNav.Link\n            href=\"#support\"\n            color=\"white\"\n            sx={{ \":hover\": { color: \"grey\" } }}\n          >\n            Contact me\n        </UnderlineNav.Link>\n        </UnderlineNav>\n      </Header.Item>\n    </Header>\n  </Fixed>);\n}\n\nconst Intro = (props: { headerOffset: number }) => {\n  return (\n    <Box\n      sx={{ minHeight: \"100px\", position: 'relative', zIndex: 0 }}\n      padding={\"10%\"}\n      mt={props.headerOffset + \"px\"}\n      mb={0}\n    >\n      <Heading fontStyle=\"italic\" color=\"white\" fontSize=\"xxx-large\" sx={{ position: 'relative', zIndex: 3 }}>\n        Hi, my name is Theo\n      </Heading>\n    </Box>\n  );\n};\n\nconst Bio = () => {\n  return (\n    <Box\n      color=\"white\"\n      p=\"5%\"\n      bg=\"#182525\"\n\n      sx={{ float: \"left\", textAlign: \"left\", position: 'relative', zIndex: 2, borderRadius: '2vw' }}\n    >\n      <Grid gridTemplateColumns=\"repeat(2, auto)\" gridGap={3}>\n        <Box>\n          <Heading mr=\"100%\" mb=\"5%\" sx={{ float: \"left\", width: \"50%\" }}>\n            Who am I?\n          </Heading>\n          <img\n            style={{ borderRadius: \"20px\" }}\n            width=\"80%\"\n            src= {process.env.PUBLIC_URL+'/res/headshot.jpg'}\n            alt='me'\n          />\n        </Box>\n        <Box mr=\"5%\">\n          <p style={{ textIndent: \"1em\", fontSize: \"3.25vw\" }}>\n            I am Theo, a Las Vegas transplant from Boston who is looking forward\n            to returning to the Greater Boston Area and attending MIT. I am\n            currently a Senior in High School and I am passionate about\n            networking and full stack programming, as well as embedded system\n            design.\n          </p>\n        </Box>\n      </Grid>\n    </Box>\n  );\n};\n\n//stolen from ian lmao\ninterface ProjectProps {\n  name: string;\n  image?: string;\n  isLogo?: boolean;\n  description: string;\n  href: string;\n}\nconst ProjectWidget = (props: ProjectProps) => {\n  const makeImage = () => {\n    if (props.image) {\n      return (\n        <div className=\"project-image\">\n          <img src={props.image}></img>\n          {!props.isLogo ? <div className=\"overlay\"></div> : null}\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n  return (\n    <div className=\"project\" onClick={() => {\n      window.location.href = props.href;\n    }}>\n      <h1>{props.name}</h1>\n      {makeImage()}\n      <span className=\"description\">{props.description}</span>\n    </div>\n  );\n}\n\nconst Footer = () => {\n  return (<Box bg=\"#101818\" width=\"100%\" height=\"auto\" color='grey'>\n    <Heading p='3%' pb='0' textAlign='left' fontSize='medium'>Copyright Â© Thelonious Cooper 2021</Heading>\n    <Heading p='3%' pt='1%' pb='2%' textAlign='left' fontSize='medium'>I made this website from scratch! Check it out <a style={{ color: 'grey' }} href='https://github.com/theloni-monk/whoami'>here</a></Heading>\n\n    <Box width='40%' pl='3%' pb='2%'>\n      <hr />\n    </Box>\n  </Box>);\n}\n\n\n\nconst App = () => {\n  const [headerWidth, setHeaderwidth] = useState(50);\n  const [headerHeight, setHeaderHeight] = useState(50);\n\n  //make sure the fixed header doesn't overlap the intro\n  useLayoutEffect(() => {\n    setHeaderwidth(window.innerWidth);\n    console.log(headerWidth);\n    setHeaderHeight(document.getElementById(\"head\")?.clientHeight as number);\n  }, [headerWidth, headerHeight]);\n  return (\n    <div className=\"App height=100% margin-bottom=50px\">\n\n      <section id=\"header\">\n        <THeader headWidth={headerWidth} />\n        <Box sx={{ backgroundImage: 'url(' + process.env.PUBLIC_URL+'/res/skyline.jpg)', minHeight: 300, width: '100%', height: '100%', position: 'fixed', zIndex: -1 }} />\n      </section>\n      <section id=\"intro\">\n        <Intro headerOffset={headerHeight} />\n      </section>\n      <section id=\"bio\">\n        <Bio />\n      </section>\n      <section id=\"projects\">\n        <Box mt=\"5%\" p=\"5%\">\n          <Heading textAlign=\"left\" color=\"white\">\n            TODO: write project section\n            </Heading>\n        </Box>\n        <Grid gridTemplateColumns=\"repeat(3, auto)\" gridGap={3}>\n\n        </Grid>\n      </section>\n      <section id='technologies'></section>\n      <section id=\"footer\">\n        <Footer />\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}